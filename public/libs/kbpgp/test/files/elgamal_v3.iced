
key = """
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1

mQGiBDTOggoRBADz4D0hUwH11ZYJaUPTnbaMIpJdh/0cH6Jya32/A/WrEtTgfsPY
Ao2V7vLhLVrjDrN9z2lIxMtspTbZ5iGWh0BvJkRWZ2MYO1nKgli14lptU0XhxbIB
lEWg9di9O2cKo9g872r5omsLE1+GCFrQj2vtQVh+aj86tKqERj72FXF2dQCg/+PM
2+UXwkiZSpEfufsdzHPVXTcD/3tcE0YFe0Z1Q3id9SfxMHFwDpNAGWtBpfWDVujg
QhQJbsc1qW4LDg5cGzaG2KVLJk9Il+vDIAmaSXK1ttBqpYnaiPPYKz70A/VWEzBW
JqujE4imzsXeQ/glGNaPhWuJJiXuUVir3vZrzKekVmrI8sYewQyRKa2tqvoip1Xx
BBw6A/4ooZlzQrZUNv9UnTZed1RUMGeQNdw4xJmaPHLvu7Dob7fxPDtkDFY1rj19
CZ4VkhkQEMSTupZx0aE1QnsDHxvEe0YU/xzrGX8bTe/cBIK3SRBtcIMnvfGpEgzS
66dit0qbJF8ekcsmoeyglC8TtAH96PKAshHNkYz3+aisbRpR9rQuRi4gQ29keSBD
YXN0ZXJsaW5lIDxjb2R5LmNhc3RlcmxpbmVAZ21haWwuY29tPohgBBMRAgAgBQJG
NYxtAhsjBgsJCAcDAgQVAggDBBYCAwECHgECF4AACgkQWiqNXmUFDnSEfgCdESoh
Lo5gIb8jqQRLZkqjkckS1IEAn3UVLGwp3B2EFvSA5B4IQPUyfZORtCtDb2R5IENh
c3RlcmxpbmUgPGluZmluaXRlQGNlbnR1cnlpbnRlci5uZXQ+iG4EMBECAC4FAj3F
gcknHSBPbGQgZS1tYWlsIGFkZHJlc3NlcyBubyBsb25nZXIgdmFsaWQuAAoJEFoq
jV5lBQ50HzcAoJ0n4wQMk1R9F6LzM7GKdzTWQ41UAJwJOFZIXvakvPeewSdtjUh4
Q7URPYhGBBMRAgAGBQI9xLdQAAoJEKEEBfMQj8CUzaYAnAvuC1uKZ/C/1ZDUVmyr
hIpwFlpZAJ9mJIxyEaSbC7SCalr4Dabk0YRTBohJBDARAgAJBQI9xaKMAh0gAAoJ
EKEEBfMQj8CUAGUAn1rQb0T4hrJo9O3J06W7yUXmhhzPAJ9XW08LGHuDuW1gvlB5
RU+F2N/2p4hLBBARAgALBQI0zoIKBAsDAQIACgkQWiqNXmUFDnRrzwCfYr9nL93a
+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
=Mx93
-----END PGP PUBLIC KEY BLOCK-----
"""

{box,KeyManager} = require '../../'

km = null

exports.import_key = (T,cb) ->
  await KeyManager.import_from_armored_pgp { armored : key }, defer err, tmp, warnings
  km = tmp
  T.no_error err
  for w in warnings.warnings()
    unless w.match /^Skipping signature by another issuer/
      T.assert false, "Bad warning: #{w}"
  cb()

exports.encrypt_with_key = (T,cb) ->
  await box { encrypt_for : km, msg : "Test message generated by KBPGP. Do you read me?" }, defer err, msg
  T.no_error err
  cb()
